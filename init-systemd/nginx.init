#!/bin/bash
# nginx Startup script for the Nginx HTTP Server
# it is v.0.0.2 version.
# chkconfig: - 85 15
# description: Nginx is a high-performance web and proxy server.
#              It has a lot of features, but it's not for everyone.
# processname: nginx
# pidfile: /var/run/nginx.pid
# config: /opt/server/nginx/conf/nginx.conf
NGX_DIR=/opt/server/openresty/nginx
nginxd=${NGX_DIR}/sbin/nginx
nginx_config=${NGX_DIR}/conf/nginx.conf
nginx_pid=${NGX_DIR}/logs/nginx.pid
RETVAL=0
prog="nginx"
# Source function library.
.  /etc/rc.d/init.d/functions
# Source networking configuration.
.  /etc/sysconfig/network
# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0
[ -x $nginxd ] || exit 0
# Start nginx daemons functions.
start() {
if [ -e $nginx_pid ];then
   ## 如果 nginx_pid 文件存在, 查询一下,文件中写的进程ID 还存在吗. 
   ## 如果不存在,继续启动
   ## 注意: 服务器异常宕机时, nginx_pid 会存在于硬盘上. 
   pid=`cat $nginx_pid`
   count=`ps -ef | grep -w $pid | grep -v grep | wc -l`
   if [ $count -gt 0 ]; then
      echo "nginx already running...."
      exit 1
   else
      rm -f /var/lock/subsys/${prog} ${nginx_pid}
   fi
fi
   echo -n $"Starting $prog: "
   daemon $nginxd -c ${nginx_config}
   RETVAL=$?
   echo
   [ $RETVAL = 0 ] && touch /var/lock/subsys/${prog}
   return $RETVAL
}
# Stop nginx daemons functions.
stop() {
        echo -n $"Stopping $prog: "
        killproc -p ${nginx_pid}  $nginxd
        RETVAL=$?
        echo
        [ $RETVAL = 0 ] && rm -f /var/lock/subsys/${prog} ${nginx_pid}
}

config_test() {
    echo -n $"Testing Configure $prog: "
    $nginxd -t
    
}

reload() {
    echo -n $"Reloading $prog: "
    #kill -HUP `cat ${nginx_pid}`
    killproc -p ${nginx_pid}  $nginxd -HUP
    RETVAL=$?
    echo
}
# See how we were called.
case "$1" in
start)
        start
        ;;
stop)
        stop
        ;;
reload)
        reload
        ;;
restart)
        stop
        start
        ;;
test)
	config_test
	;;
status)
        status $prog
        RETVAL=$?
        ;;
*)
        echo $"Usage: $prog {start|stop|restart|reload|status|test|help}"
        exit 1
esac
exit $RETVAL
